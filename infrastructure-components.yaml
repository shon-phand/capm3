apiVersion: v1
kind: Namespace
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: baremetalhosts.metal3.io
spec:
  group: metal3.io
  names:
    kind: BareMetalHost
    listKind: BareMetalHostList
    plural: baremetalhosts
    shortNames:
    - bmh
    - bmhost
    singular: baremetalhost
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Operational status
      jsonPath: .status.operationalStatus
      name: Status
      priority: 1
      type: string
    - description: Provisioning status
      jsonPath: .status.provisioning.state
      name: State
      type: string
    - description: Consumer using this host
      jsonPath: .spec.consumerRef.name
      name: Consumer
      type: string
    - description: Address of management controller
      jsonPath: .spec.bmc.address
      name: BMC
      priority: 1
      type: string
    - description: The type of hardware detected
      jsonPath: .status.hardwareProfile
      name: Hardware_Profile
      priority: 1
      type: string
    - description: Whether the host is online or not
      jsonPath: .spec.online
      name: Online
      type: string
    - description: Type of the most recent error
      jsonPath: .status.errorType
      name: Error
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BareMetalHost is the Schema for the baremetalhosts API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BareMetalHostSpec defines the desired state of BareMetalHost
            properties:
              automatedCleaningMode:
                default: metadata
                description: When set to disabled, automated cleaning will be avoided during provisioning and deprovisioning.
                enum:
                - metadata
                - disabled
                type: string
              bmc:
                description: How do we connect to the BMC?
                properties:
                  address:
                    description: Address holds the URL for accessing the controller on the network.
                    type: string
                  credentialsName:
                    description: The name of the secret containing the BMC credentials (requires keys "username" and "password").
                    type: string
                  disableCertificateVerification:
                    description: DisableCertificateVerification disables verification of server certificates when using HTTPS to connect to the BMC. This is required when the server certificate is self-signed, but is insecure because it allows a man-in-the-middle to intercept the connection.
                    type: boolean
                required:
                - address
                - credentialsName
                type: object
              bootMACAddress:
                description: Which MAC address will PXE boot? This is optional for some types, but required for libvirt VMs driven by vbmc.
                pattern: '[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'
                type: string
              bootMode:
                description: Select the method of initializing the hardware during boot. Defaults to UEFI.
                enum:
                - UEFI
                - UEFISecureBoot
                - legacy
                type: string
              consumerRef:
                description: ConsumerRef can be used to store information about something that is using a host. When it is not empty, the host is considered "in use".
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              customDeploy:
                description: A custom deploy procedure.
                properties:
                  method:
                    description: Custom deploy method name. This name is specific to the deploy ramdisk used. If you don't have a custom deploy ramdisk, you shouldn't use CustomDeploy.
                    type: string
                required:
                - method
                type: object
              description:
                description: Description is a human-entered text used to help identify the host
                type: string
              externallyProvisioned:
                description: ExternallyProvisioned means something else is managing the image running on the host and the operator should only manage the power status and hardware inventory inspection. If the Image field is filled in, this field is ignored.
                type: boolean
              firmware:
                description: BIOS configuration for bare metal server
                properties:
                  simultaneousMultithreadingEnabled:
                    description: 'Allows a single physical processor core to appear as several logical processors. This supports following options: true, false.'
                    enum:
                    - true
                    - false
                    type: boolean
                  sriovEnabled:
                    description: 'SR-IOV support enables a hypervisor to create virtual instances of a PCI-express device, potentially increasing performance. This supports following options: true, false.'
                    enum:
                    - true
                    - false
                    type: boolean
                  virtualizationEnabled:
                    description: 'Supports the virtualization of platform hardware. This supports following options: true, false.'
                    enum:
                    - true
                    - false
                    type: boolean
                type: object
              hardwareProfile:
                description: What is the name of the hardware profile for this host? It should only be necessary to set this when inspection cannot automatically determine the profile.
                type: string
              image:
                description: Image holds the details of the image to be provisioned.
                properties:
                  checksum:
                    description: Checksum is the checksum for the image.
                    type: string
                  checksumType:
                    description: ChecksumType is the checksum algorithm for the image. e.g md5, sha256, sha512
                    enum:
                    - md5
                    - sha256
                    - sha512
                    type: string
                  format:
                    description: DiskFormat contains the format of the image (raw, qcow2, ...). Needs to be set to raw for raw images streaming. Note live-iso means an iso referenced by the url will be live-booted and not deployed to disk, and in this case the checksum options are not required and if specified will be ignored.
                    enum:
                    - raw
                    - qcow2
                    - vdi
                    - vmdk
                    - live-iso
                    type: string
                  url:
                    description: URL is a location of an image to deploy.
                    type: string
                required:
                - url
                type: object
              metaData:
                description: MetaData holds the reference to the Secret containing host metadata (e.g. meta_data.json which is passed to Config Drive).
                properties:
                  name:
                    description: Name is unique within a namespace to reference a secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret name must be unique.
                    type: string
                type: object
              networkData:
                description: NetworkData holds the reference to the Secret containing network configuration (e.g content of network_data.json which is passed to Config Drive).
                properties:
                  name:
                    description: Name is unique within a namespace to reference a secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret name must be unique.
                    type: string
                type: object
              online:
                description: Should the server be online?
                type: boolean
              raid:
                description: RAID configuration for bare metal server
                properties:
                  hardwareRAIDVolumes:
                    description: The list of logical disks for hardware RAID, if rootDeviceHints isn't used, first volume is root volume. You can set the value of this field to `[]` to clear all the hardware RAID configurations.
                    items:
                      description: HardwareRAIDVolume defines the desired configuration of volume in hardware RAID
                      properties:
                        level:
                          description: 'RAID level for the logical disk. The following levels are supported: 0;1;2;5;6;1+0;5+0;6+0.'
                          enum:
                          - "0"
                          - "1"
                          - "2"
                          - "5"
                          - "6"
                          - 1+0
                          - 5+0
                          - 6+0
                          type: string
                        name:
                          description: Name of the volume. Should be unique within the Node. If not specified, volume name will be auto-generated.
                          maxLength: 64
                          type: string
                        numberOfPhysicalDisks:
                          description: Integer, number of physical disks to use for the logical disk. Defaults to minimum number of disks required for the particular RAID level.
                          minimum: 1
                          type: integer
                        rotational:
                          description: Select disks with only rotational or solid-state storage
                          type: boolean
                        sizeGibibytes:
                          description: Size (Integer) of the logical disk to be created in GiB. If unspecified or set be 0, the maximum capacity of disk will be used for logical disk.
                          minimum: 0
                          type: integer
                      required:
                      - level
                      type: object
                    type: array
                  softwareRAIDVolumes:
                    description: The list of logical disks for software RAID, if rootDeviceHints isn't used, first volume is root volume. If HardwareRAIDVolumes is set this item will be invalid. The number of created Software RAID devices must be 1 or 2. If there is only one Software RAID device, it has to be a RAID-1. If there are two, the first one has to be a RAID-1, while the RAID level for the second one can be 0, 1, or 1+0. As the first RAID device will be the deployment device, enforcing a RAID-1 reduces the risk of ending up with a non-booting node in case of a disk failure. Software RAID will always be deleted.
                    items:
                      description: SoftwareRAIDVolume defines the desired configuration of volume in software RAID
                      properties:
                        level:
                          description: 'RAID level for the logical disk. The following levels are supported: 0;1;1+0.'
                          enum:
                          - "0"
                          - "1"
                          - 1+0
                          type: string
                        physicalDisks:
                          description: A list of device hints, the number of items should be greater than or equal to 2.
                          items:
                            description: RootDeviceHints holds the hints for specifying the storage location for the root filesystem for the image.
                            properties:
                              deviceName:
                                description: A Linux device name like "/dev/vda". The hint must match the actual value exactly.
                                type: string
                              hctl:
                                description: A SCSI bus address like 0:0:0:0. The hint must match the actual value exactly.
                                type: string
                              minSizeGigabytes:
                                description: The minimum size of the device in Gigabytes.
                                minimum: 0
                                type: integer
                              model:
                                description: A vendor-specific device identifier. The hint can be a substring of the actual value.
                                type: string
                              rotational:
                                description: True if the device should use spinning media, false otherwise.
                                type: boolean
                              serialNumber:
                                description: Device serial number. The hint must match the actual value exactly.
                                type: string
                              vendor:
                                description: The name of the vendor or manufacturer of the device. The hint can be a substring of the actual value.
                                type: string
                              wwn:
                                description: Unique storage identifier. The hint must match the actual value exactly.
                                type: string
                              wwnVendorExtension:
                                description: Unique vendor storage identifier. The hint must match the actual value exactly.
                                type: string
                              wwnWithExtension:
                                description: Unique storage identifier with the vendor extension appended. The hint must match the actual value exactly.
                                type: string
                            type: object
                          minItems: 2
                          type: array
                        sizeGibibytes:
                          description: Size (Integer) of the logical disk to be created in GiB. If unspecified or set be 0, the maximum capacity of disk will be used for logical disk.
                          minimum: 0
                          type: integer
                      required:
                      - level
                      type: object
                    maxItems: 2
                    type: array
                type: object
              rootDeviceHints:
                description: Provide guidance about how to choose the device for the image being provisioned.
                properties:
                  deviceName:
                    description: A Linux device name like "/dev/vda". The hint must match the actual value exactly.
                    type: string
                  hctl:
                    description: A SCSI bus address like 0:0:0:0. The hint must match the actual value exactly.
                    type: string
                  minSizeGigabytes:
                    description: The minimum size of the device in Gigabytes.
                    minimum: 0
                    type: integer
                  model:
                    description: A vendor-specific device identifier. The hint can be a substring of the actual value.
                    type: string
                  rotational:
                    description: True if the device should use spinning media, false otherwise.
                    type: boolean
                  serialNumber:
                    description: Device serial number. The hint must match the actual value exactly.
                    type: string
                  vendor:
                    description: The name of the vendor or manufacturer of the device. The hint can be a substring of the actual value.
                    type: string
                  wwn:
                    description: Unique storage identifier. The hint must match the actual value exactly.
                    type: string
                  wwnVendorExtension:
                    description: Unique vendor storage identifier. The hint must match the actual value exactly.
                    type: string
                  wwnWithExtension:
                    description: Unique storage identifier with the vendor extension appended. The hint must match the actual value exactly.
                    type: string
                type: object
              taints:
                description: Taints is the full, authoritative list of taints to apply to the corresponding Machine. This list will overwrite any modifications made to the Machine on an ongoing basis.
                items:
                  description: The node this Taint is attached to has the "effect" on any pod that does not tolerate the Taint.
                  properties:
                    effect:
                      description: Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
                      type: string
                    key:
                      description: Required. The taint key to be applied to a node.
                      type: string
                    timeAdded:
                      description: TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.
                      format: date-time
                      type: string
                    value:
                      description: The taint value corresponding to the taint key.
                      type: string
                  required:
                  - effect
                  - key
                  type: object
                type: array
              userData:
                description: UserData holds the reference to the Secret containing the user data to be passed to the host before it boots.
                properties:
                  name:
                    description: Name is unique within a namespace to reference a secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret name must be unique.
                    type: string
                type: object
            required:
            - online
            type: object
          status:
            description: BareMetalHostStatus defines the observed state of BareMetalHost
            properties:
              errorCount:
                default: 0
                description: ErrorCount records how many times the host has encoutered an error since the last successful operation
                type: integer
              errorMessage:
                description: the last error message reported by the provisioning subsystem
                type: string
              errorType:
                description: ErrorType indicates the type of failure encountered when the OperationalStatus is OperationalStatusError
                enum:
                - provisioned registration error
                - registration error
                - inspection error
                - preparation error
                - provisioning error
                - power management error
                type: string
              goodCredentials:
                description: the last credentials we were able to validate as working
                properties:
                  credentials:
                    description: SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
                    properties:
                      name:
                        description: Name is unique within a namespace to reference a secret resource.
                        type: string
                      namespace:
                        description: Namespace defines the space within which the secret name must be unique.
                        type: string
                    type: object
                  credentialsVersion:
                    type: string
                type: object
              hardware:
                description: The hardware discovered to exist on the host.
                properties:
                  cpu:
                    description: CPU describes one processor on the host.
                    properties:
                      arch:
                        type: string
                      clockMegahertz:
                        description: ClockSpeed is a clock speed in MHz
                        format: double
                        type: number
                      count:
                        type: integer
                      flags:
                        items:
                          type: string
                        type: array
                      model:
                        type: string
                    type: object
                  firmware:
                    description: Firmware describes the firmware on the host.
                    properties:
                      bios:
                        description: The BIOS for this firmware
                        properties:
                          date:
                            description: The release/build date for this BIOS
                            type: string
                          vendor:
                            description: The vendor name for this BIOS
                            type: string
                          version:
                            description: The version of the BIOS
                            type: string
                        type: object
                    type: object
                  hostname:
                    type: string
                  nics:
                    items:
                      description: NIC describes one network interface on the host.
                      properties:
                        ip:
                          description: The IP address of the interface. This will be an IPv4 or IPv6 address if one is present.  If both IPv4 and IPv6 addresses are present in a dual-stack environment, two nics will be output, one with each IP.
                          type: string
                        mac:
                          description: The device MAC address
                          pattern: '[0-9a-fA-F]{2}(:[0-9a-fA-F]{2}){5}'
                          type: string
                        model:
                          description: The vendor and product IDs of the NIC, e.g. "0x8086 0x1572"
                          type: string
                        name:
                          description: The name of the network interface, e.g. "en0"
                          type: string
                        pxe:
                          description: Whether the NIC is PXE Bootable
                          type: boolean
                        speedGbps:
                          description: The speed of the device in Gigabits per second
                          type: integer
                        vlanId:
                          description: The untagged VLAN ID
                          format: int32
                          maximum: 4094
                          minimum: 0
                          type: integer
                        vlans:
                          description: The VLANs available
                          items:
                            description: VLAN represents the name and ID of a VLAN
                            properties:
                              id:
                                description: VLANID is a 12-bit 802.1Q VLAN identifier
                                format: int32
                                maximum: 4094
                                minimum: 0
                                type: integer
                              name:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  ramMebibytes:
                    type: integer
                  storage:
                    items:
                      description: Storage describes one storage device (disk, SSD, etc.) on the host.
                      properties:
                        hctl:
                          description: The SCSI location of the device
                          type: string
                        model:
                          description: Hardware model
                          type: string
                        name:
                          description: The Linux device name of the disk, e.g. "/dev/sda". Note that this may not be stable across reboots.
                          type: string
                        rotational:
                          description: Whether this disk represents rotational storage. This field is not recommended for usage, please prefer using 'Type' field instead, this field will be deprecated eventually.
                          type: boolean
                        serialNumber:
                          description: The serial number of the device
                          type: string
                        sizeBytes:
                          description: The size of the disk in Bytes
                          format: int64
                          type: integer
                        type:
                          description: 'Device type, one of: HDD, SSD, NVME.'
                          enum:
                          - HDD
                          - SSD
                          - NVME
                          type: string
                        vendor:
                          description: The name of the vendor of the device
                          type: string
                        wwn:
                          description: The WWN of the device
                          type: string
                        wwnVendorExtension:
                          description: The WWN Vendor extension of the device
                          type: string
                        wwnWithExtension:
                          description: The WWN with the extension
                          type: string
                      type: object
                    type: array
                  systemVendor:
                    description: HardwareSystemVendor stores details about the whole hardware system.
                    properties:
                      manufacturer:
                        type: string
                      productName:
                        type: string
                      serialNumber:
                        type: string
                    type: object
                type: object
              hardwareProfile:
                description: The name of the profile matching the hardware details.
                type: string
              lastUpdated:
                description: LastUpdated identifies when this status was last observed.
                format: date-time
                type: string
              operationHistory:
                description: OperationHistory holds information about operations performed on this host.
                properties:
                  deprovision:
                    description: OperationMetric contains metadata about an operation (inspection, provisioning, etc.) used for tracking metrics.
                    properties:
                      end:
                        format: date-time
                        nullable: true
                        type: string
                      start:
                        format: date-time
                        nullable: true
                        type: string
                    type: object
                  inspect:
                    description: OperationMetric contains metadata about an operation (inspection, provisioning, etc.) used for tracking metrics.
                    properties:
                      end:
                        format: date-time
                        nullable: true
                        type: string
                      start:
                        format: date-time
                        nullable: true
                        type: string
                    type: object
                  provision:
                    description: OperationMetric contains metadata about an operation (inspection, provisioning, etc.) used for tracking metrics.
                    properties:
                      end:
                        format: date-time
                        nullable: true
                        type: string
                      start:
                        format: date-time
                        nullable: true
                        type: string
                    type: object
                  register:
                    description: OperationMetric contains metadata about an operation (inspection, provisioning, etc.) used for tracking metrics.
                    properties:
                      end:
                        format: date-time
                        nullable: true
                        type: string
                      start:
                        format: date-time
                        nullable: true
                        type: string
                    type: object
                type: object
              operationalStatus:
                description: OperationalStatus holds the status of the host
                enum:
                - ""
                - OK
                - discovered
                - error
                - delayed
                - detached
                type: string
              poweredOn:
                description: indicator for whether or not the host is powered on
                type: boolean
              provisioning:
                description: Information tracked by the provisioner.
                properties:
                  ID:
                    description: The machine's UUID from the underlying provisioning tool
                    type: string
                  bootMode:
                    description: BootMode indicates the boot mode used to provision the node
                    enum:
                    - UEFI
                    - UEFISecureBoot
                    - legacy
                    type: string
                  customDeploy:
                    description: Custom deploy procedure applied to the host.
                    properties:
                      method:
                        description: Custom deploy method name. This name is specific to the deploy ramdisk used. If you don't have a custom deploy ramdisk, you shouldn't use CustomDeploy.
                        type: string
                    required:
                    - method
                    type: object
                  firmware:
                    description: The Bios set by the user
                    properties:
                      simultaneousMultithreadingEnabled:
                        description: 'Allows a single physical processor core to appear as several logical processors. This supports following options: true, false.'
                        enum:
                        - true
                        - false
                        type: boolean
                      sriovEnabled:
                        description: 'SR-IOV support enables a hypervisor to create virtual instances of a PCI-express device, potentially increasing performance. This supports following options: true, false.'
                        enum:
                        - true
                        - false
                        type: boolean
                      virtualizationEnabled:
                        description: 'Supports the virtualization of platform hardware. This supports following options: true, false.'
                        enum:
                        - true
                        - false
                        type: boolean
                    type: object
                  image:
                    description: Image holds the details of the last image successfully provisioned to the host.
                    properties:
                      checksum:
                        description: Checksum is the checksum for the image.
                        type: string
                      checksumType:
                        description: ChecksumType is the checksum algorithm for the image. e.g md5, sha256, sha512
                        enum:
                        - md5
                        - sha256
                        - sha512
                        type: string
                      format:
                        description: DiskFormat contains the format of the image (raw, qcow2, ...). Needs to be set to raw for raw images streaming. Note live-iso means an iso referenced by the url will be live-booted and not deployed to disk, and in this case the checksum options are not required and if specified will be ignored.
                        enum:
                        - raw
                        - qcow2
                        - vdi
                        - vmdk
                        - live-iso
                        type: string
                      url:
                        description: URL is a location of an image to deploy.
                        type: string
                    required:
                    - url
                    type: object
                  raid:
                    description: The Raid set by the user
                    properties:
                      hardwareRAIDVolumes:
                        description: The list of logical disks for hardware RAID, if rootDeviceHints isn't used, first volume is root volume. You can set the value of this field to `[]` to clear all the hardware RAID configurations.
                        items:
                          description: HardwareRAIDVolume defines the desired configuration of volume in hardware RAID
                          properties:
                            level:
                              description: 'RAID level for the logical disk. The following levels are supported: 0;1;2;5;6;1+0;5+0;6+0.'
                              enum:
                              - "0"
                              - "1"
                              - "2"
                              - "5"
                              - "6"
                              - 1+0
                              - 5+0
                              - 6+0
                              type: string
                            name:
                              description: Name of the volume. Should be unique within the Node. If not specified, volume name will be auto-generated.
                              maxLength: 64
                              type: string
                            numberOfPhysicalDisks:
                              description: Integer, number of physical disks to use for the logical disk. Defaults to minimum number of disks required for the particular RAID level.
                              minimum: 1
                              type: integer
                            rotational:
                              description: Select disks with only rotational or solid-state storage
                              type: boolean
                            sizeGibibytes:
                              description: Size (Integer) of the logical disk to be created in GiB. If unspecified or set be 0, the maximum capacity of disk will be used for logical disk.
                              minimum: 0
                              type: integer
                          required:
                          - level
                          type: object
                        type: array
                      softwareRAIDVolumes:
                        description: The list of logical disks for software RAID, if rootDeviceHints isn't used, first volume is root volume. If HardwareRAIDVolumes is set this item will be invalid. The number of created Software RAID devices must be 1 or 2. If there is only one Software RAID device, it has to be a RAID-1. If there are two, the first one has to be a RAID-1, while the RAID level for the second one can be 0, 1, or 1+0. As the first RAID device will be the deployment device, enforcing a RAID-1 reduces the risk of ending up with a non-booting node in case of a disk failure. Software RAID will always be deleted.
                        items:
                          description: SoftwareRAIDVolume defines the desired configuration of volume in software RAID
                          properties:
                            level:
                              description: 'RAID level for the logical disk. The following levels are supported: 0;1;1+0.'
                              enum:
                              - "0"
                              - "1"
                              - 1+0
                              type: string
                            physicalDisks:
                              description: A list of device hints, the number of items should be greater than or equal to 2.
                              items:
                                description: RootDeviceHints holds the hints for specifying the storage location for the root filesystem for the image.
                                properties:
                                  deviceName:
                                    description: A Linux device name like "/dev/vda". The hint must match the actual value exactly.
                                    type: string
                                  hctl:
                                    description: A SCSI bus address like 0:0:0:0. The hint must match the actual value exactly.
                                    type: string
                                  minSizeGigabytes:
                                    description: The minimum size of the device in Gigabytes.
                                    minimum: 0
                                    type: integer
                                  model:
                                    description: A vendor-specific device identifier. The hint can be a substring of the actual value.
                                    type: string
                                  rotational:
                                    description: True if the device should use spinning media, false otherwise.
                                    type: boolean
                                  serialNumber:
                                    description: Device serial number. The hint must match the actual value exactly.
                                    type: string
                                  vendor:
                                    description: The name of the vendor or manufacturer of the device. The hint can be a substring of the actual value.
                                    type: string
                                  wwn:
                                    description: Unique storage identifier. The hint must match the actual value exactly.
                                    type: string
                                  wwnVendorExtension:
                                    description: Unique vendor storage identifier. The hint must match the actual value exactly.
                                    type: string
                                  wwnWithExtension:
                                    description: Unique storage identifier with the vendor extension appended. The hint must match the actual value exactly.
                                    type: string
                                type: object
                              minItems: 2
                              type: array
                            sizeGibibytes:
                              description: Size (Integer) of the logical disk to be created in GiB. If unspecified or set be 0, the maximum capacity of disk will be used for logical disk.
                              minimum: 0
                              type: integer
                          required:
                          - level
                          type: object
                        maxItems: 2
                        type: array
                    type: object
                  rootDeviceHints:
                    description: The RootDevicehints set by the user
                    properties:
                      deviceName:
                        description: A Linux device name like "/dev/vda". The hint must match the actual value exactly.
                        type: string
                      hctl:
                        description: A SCSI bus address like 0:0:0:0. The hint must match the actual value exactly.
                        type: string
                      minSizeGigabytes:
                        description: The minimum size of the device in Gigabytes.
                        minimum: 0
                        type: integer
                      model:
                        description: A vendor-specific device identifier. The hint can be a substring of the actual value.
                        type: string
                      rotational:
                        description: True if the device should use spinning media, false otherwise.
                        type: boolean
                      serialNumber:
                        description: Device serial number. The hint must match the actual value exactly.
                        type: string
                      vendor:
                        description: The name of the vendor or manufacturer of the device. The hint can be a substring of the actual value.
                        type: string
                      wwn:
                        description: Unique storage identifier. The hint must match the actual value exactly.
                        type: string
                      wwnVendorExtension:
                        description: Unique vendor storage identifier. The hint must match the actual value exactly.
                        type: string
                      wwnWithExtension:
                        description: Unique storage identifier with the vendor extension appended. The hint must match the actual value exactly.
                        type: string
                    type: object
                  state:
                    description: An indiciator for what the provisioner is doing with the host.
                    type: string
                required:
                - ID
                - state
                type: object
              triedCredentials:
                description: the last credentials we sent to the provisioning backend
                properties:
                  credentials:
                    description: SecretReference represents a Secret Reference. It has enough information to retrieve secret in any namespace
                    properties:
                      name:
                        description: Name is unique within a namespace to reference a secret resource.
                        type: string
                      namespace:
                        description: Namespace defines the space within which the secret name must be unique.
                        type: string
                    type: object
                  credentialsVersion:
                    type: string
                type: object
            required:
            - errorCount
            - errorMessage
            - hardwareProfile
            - operationalStatus
            - poweredOn
            - provisioning
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: firmwareschemas.metal3.io
spec:
  group: metal3.io
  names:
    kind: FirmwareSchema
    listKind: FirmwareSchemaList
    plural: firmwareschemas
    singular: firmwareschema
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FirmwareSchema is the Schema for the firmwareschemas API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FirmwareSchemaSpec defines the desired state of FirmwareSchema
            properties:
              hardwareModel:
                description: The hardware model associated with this schema
                type: string
              hardwareVendor:
                description: The hardware vendor associated with this schema
                type: string
              schema:
                additionalProperties:
                  description: Additional data describing the firmware setting
                  properties:
                    allowable_values:
                      description: The allowable value for an Enumeration type setting.
                      items:
                        type: string
                      type: array
                    attribute_type:
                      description: The type of setting.
                      enum:
                      - Enumeration
                      - String
                      - Integer
                      - Boolean
                      - Password
                      type: string
                    lower_bound:
                      description: The lowest value for an Integer type setting.
                      type: integer
                    max_length:
                      description: Maximum length for a String type setting.
                      type: integer
                    min_length:
                      description: Minimum length for a String type setting.
                      type: integer
                    read_only:
                      description: Whether or not this setting is read only.
                      type: boolean
                    reset_required:
                      description: Whether or not a reset is required after changing this setting.
                      type: boolean
                    unique:
                      description: Whether or not this setting's value is unique to this node, e.g. a serial number.
                      type: boolean
                    upper_bound:
                      description: The highest value for an Integer type setting.
                      type: integer
                  type: object
                description: Map of firmware name to schema
                type: object
            required:
            - schema
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.0
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: hostfirmwaresettings.metal3.io
spec:
  group: metal3.io
  names:
    kind: HostFirmwareSettings
    listKind: HostFirmwareSettingsList
    plural: hostfirmwaresettings
    singular: hostfirmwaresettings
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HostFirmwareSettings is the Schema for the hostfirmwaresettings API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: HostFirmwareSettingsSpec defines the desired state of HostFirmwareSettings
            properties:
              settings:
                additionalProperties:
                  anyOf:
                  - type: integer
                  - type: string
                  x-kubernetes-int-or-string: true
                description: Settings are the desired firmware settings stored as name/value pairs. This will be populated with the actual firmware settings and only contain the settings that can be modified (i.e. not ReadOnly), to facilitate making changes.
                type: object
            required:
            - settings
            type: object
          status:
            description: HostFirmwareSettingsStatus defines the observed state of HostFirmwareSettings
            properties:
              schema:
                description: FirmwareSchema is a reference to the Schema used to describe each FirmwareSetting. By default, this will be a Schema in the same Namespace as the settings but it can be overwritten in the Spec
                properties:
                  name:
                    description: '`name` is the reference to the schema.'
                    type: string
                  namespace:
                    description: '`namespace` is the namespace of the where the schema is stored.'
                    type: string
                required:
                - name
                - namespace
                type: object
              settings:
                additionalProperties:
                  type: string
                description: Settings are the actual firmware settings stored as name/value pairs
                type: object
            required:
            - settings
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/ipam-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.8
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    cluster.x-k8s.io/v1alpha2: v1alpha2
    cluster.x-k8s.io/v1alpha3: v1alpha3_v1alpha4
  name: ipaddresses.ipam.metal3.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capm3-ipam-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: ipam.metal3.io
  names:
    categories:
    - metal3
    kind: IPAddress
    listKind: IPAddressList
    plural: ipaddresses
    shortNames:
    - ipa
    - ipaddress
    - m3ipa
    - m3ipaddress
    - m3ipaddresses
    - metal3ipa
    - metal3ipaddress
    - metal3ipaddresses
    singular: ipaddress
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IPAddress is the Schema for the ipaddresses API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IPAddressSpec defines the desired state of IPAddress.
            properties:
              address:
                description: Address contains the IP address
                pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))
                type: string
              claim:
                description: Claim points to the object the IPClaim was created for.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              dnsServers:
                description: DNSServers is the list of dns servers
                items:
                  description: IPAddress is used for validation of an IP address
                  pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))
                  type: string
                type: array
              gateway:
                description: Gateway is the gateway ip address
                pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))
                type: string
              pool:
                description: Pool is the IPPool this was generated from.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              prefix:
                description: Prefix is the mask of the network as integer (max 128)
                maximum: 128
                type: integer
            required:
            - address
            - claim
            - pool
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/ipam-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.8
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    cluster.x-k8s.io/v1alpha2: v1alpha2
    cluster.x-k8s.io/v1alpha3: v1alpha3_v1alpha4
  name: ipclaims.ipam.metal3.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capm3-ipam-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: ipam.metal3.io
  names:
    categories:
    - cluster-api
    kind: IPClaim
    listKind: IPClaimList
    plural: ipclaims
    shortNames:
    - ipc
    - ipclaim
    - m3ipc
    - m3ipclaim
    - m3ipclaims
    - metal3ipc
    - metal3ipclaim
    - metal3ipclaims
    singular: ipclaim
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IPClaim is the Schema for the ipclaims API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IPClaimSpec defines the desired state of IPClaim.
            properties:
              pool:
                description: Pool is the IPPool this was generated from.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            required:
            - pool
            type: object
          status:
            description: IPClaimStatus defines the observed state of IPClaim.
            properties:
              address:
                description: Address is the IPAddress that was generated for this claim.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              errorMessage:
                description: ErrorMessage contains the error message
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/ipam-serving-cert
    controller-gen.kubebuilder.io/version: v0.2.8
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    cluster.x-k8s.io/v1alpha2: v1alpha2
    cluster.x-k8s.io/v1alpha3: v1alpha3_v1alpha4
  name: ippools.ipam.metal3.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capm3-ipam-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: ipam.metal3.io
  names:
    categories:
    - cluster-api
    kind: IPPool
    listKind: IPPoolList
    plural: ippools
    shortNames:
    - ipp
    - ippool
    - m3ipp
    - m3ippool
    - m3ippools
    - metal3ipp
    - metal3ippool
    - metal3ippools
    singular: ippool
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this template belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IPPool is the Schema for the ippools API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IPPoolSpec defines the desired state of IPPool.
            properties:
              clusterName:
                description: ClusterName is the name of the Cluster this object belongs to.
                type: string
              dnsServers:
                description: DNSServers is the list of dns servers
                items:
                  description: IPAddress is used for validation of an IP address
                  pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))
                  type: string
                type: array
              gateway:
                description: Gateway is the gateway ip address
                pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))
                type: string
              namePrefix:
                description: namePrefix is the prefix used to generate the IPAddress object names
                minLength: 1
                type: string
              pools:
                description: Pools contains the list of IP addresses pools
                items:
                  description: MetaDataIPAddress contains the info to render th ip address. It is IP-version agnostic
                  properties:
                    dnsServers:
                      description: DNSServers is the list of dns servers
                      items:
                        description: IPAddress is used for validation of an IP address
                        pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))
                        type: string
                      type: array
                    end:
                      description: End is the last IP address that can be rendered. It is used as a validation that the rendered IP is in bound.
                      pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))
                      type: string
                    gateway:
                      description: Gateway is the gateway ip address
                      pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))
                      type: string
                    prefix:
                      description: Prefix is the mask of the network as integer (max 128)
                      maximum: 128
                      type: integer
                    start:
                      description: Start is the first ip address that can be rendered
                      pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))
                      type: string
                    subnet:
                      description: Subnet is used to validate that the rendered IP is in bounds. In case the Start value is not given, it is derived from the subnet ip incremented by 1 (`192.168.0.1` for `192.168.0.0/24`)
                      pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))/([0-9]|[1-2][0-9]|3[0-2])$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))/([0-9]|[0-9][0-9]|1[0-1][0-9]|12[0-8])$))
                      type: string
                  type: object
                type: array
              preAllocations:
                additionalProperties:
                  description: IPAddress is used for validation of an IP address
                  pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))
                  type: string
                description: PreAllocations contains the preallocated IP addresses
                type: object
              prefix:
                description: Prefix is the mask of the network as integer (max 128)
                maximum: 128
                type: integer
            required:
            - namePrefix
            type: object
          status:
            description: IPPoolStatus defines the observed state of IPPool.
            properties:
              indexes:
                additionalProperties:
                  description: IPAddress is used for validation of an IP address
                  pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))
                  type: string
                description: Allocations contains the map of objects and IP addresses they have
                type: object
              lastUpdated:
                description: LastUpdated identifies when this status was last observed.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capm3-serving-cert
    controller-gen.kubebuilder.io/version: v0.5.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    cluster.x-k8s.io/v1alpha3: v1alpha3_v1alpha4
  name: metal3clusters.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capm3-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3Cluster
    listKind: Metal3ClusterList
    plural: metal3clusters
    shortNames:
    - m3c
    - m3cluster
    - m3clusters
    - metal3c
    - metal3cluster
    singular: metal3cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: metal3Cluster is Ready
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Most recent error
      jsonPath: .status.failureReason
      name: Error
      type: string
    - description: Cluster to which this BMCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Control plane endpoint
      jsonPath: .spec.controlPlaneEndpoint
      name: Endpoint
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: Metal3Cluster is the Schema for the metal3clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3ClusterSpec defines the desired state of Metal3Cluster.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                properties:
                  host:
                    description: Host is the hostname on which the API server is serving.
                    type: string
                  port:
                    description: Port is the port on which the API server is serving.
                    type: integer
                required:
                - host
                - port
                type: object
              noCloudProvider:
                type: boolean
            required:
            - controlPlaneEndpoint
            type: object
          status:
            description: Metal3ClusterStatus defines the observed state of Metal3Cluster.
            properties:
              failureMessage:
                description: FailureMessage indicates that there is a fatal problem reconciling the state, and will be set to a descriptive error message.
                type: string
              failureReason:
                description: FailureReason indicates that there is a fatal problem reconciling the state, and will be set to a token value suitable for programmatic interpretation.
                type: string
              lastUpdated:
                description: LastUpdated identifies when this status was last observed.
                format: date-time
                type: string
              ready:
                description: Ready denotes that the Metal3 cluster (infrastructure) is ready. In Baremetal case, it does not mean anything for now as no infrastructure steps need to be performed. Required by Cluster API. Set to True by the metal3Cluster controller after creation.
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: metal3Cluster is Ready
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Most recent error
      jsonPath: .status.failureReason
      name: Error
      type: string
    - description: Cluster to which this BMCluster belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: Control plane endpoint
      jsonPath: .spec.controlPlaneEndpoint
      name: Endpoint
      type: string
    name: v1alpha4
    schema:
      openAPIV3Schema:
        description: Metal3Cluster is the Schema for the metal3clusters API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3ClusterSpec defines the desired state of Metal3Cluster.
            properties:
              controlPlaneEndpoint:
                description: ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.
                properties:
                  host:
                    description: Host is the hostname on which the API server is serving.
                    type: string
                  port:
                    description: Port is the port on which the API server is serving.
                    type: integer
                required:
                - host
                - port
                type: object
              noCloudProvider:
                type: boolean
            required:
            - controlPlaneEndpoint
            type: object
          status:
            description: Metal3ClusterStatus defines the observed state of Metal3Cluster.
            properties:
              failureMessage:
                description: FailureMessage indicates that there is a fatal problem reconciling the state, and will be set to a descriptive error message.
                type: string
              failureReason:
                description: FailureReason indicates that there is a fatal problem reconciling the state, and will be set to a token value suitable for programmatic interpretation.
                type: string
              lastUpdated:
                description: LastUpdated identifies when this status was last observed.
                format: date-time
                type: string
              ready:
                description: Ready denotes that the Metal3 cluster (infrastructure) is ready. In Baremetal case, it does not mean anything for now as no infrastructure steps need to be performed. Required by Cluster API. Set to True by the metal3Cluster controller after creation.
                type: boolean
            required:
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capm3-serving-cert
    controller-gen.kubebuilder.io/version: v0.5.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    cluster.x-k8s.io/v1alpha3: v1alpha3_v1alpha4
  name: metal3dataclaims.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capm3-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3DataClaim
    listKind: Metal3DataClaimList
    plural: metal3dataclaims
    shortNames:
    - m3dc
    - m3dataclaim
    - m3dataclaims
    - metal3dc
    - metal3dataclaim
    singular: metal3dataclaim
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: Metal3DataClaim is the Schema for the metal3datas API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3DataClaimSpec defines the desired state of Metal3DataClaim.
            properties:
              template:
                description: Template is the Metal3DataTemplate this was generated for.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            required:
            - template
            type: object
          status:
            description: Metal3DataClaimStatus defines the observed state of Metal3DataClaim.
            properties:
              errorMessage:
                description: ErrorMessage contains the error message
                type: string
              renderedData:
                description: RenderedData references the Metal3Data when ready
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capm3-serving-cert
    controller-gen.kubebuilder.io/version: v0.5.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    cluster.x-k8s.io/v1alpha3: v1alpha3_v1alpha4
  name: metal3datas.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capm3-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3Data
    listKind: Metal3DataList
    plural: metal3datas
    shortNames:
    - m3d
    - m3data
    - m3datas
    - metal3d
    - metal3data
    singular: metal3data
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: Metal3Data is the Schema for the metal3datas API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3DataSpec defines the desired state of Metal3Data.
            properties:
              claim:
                description: DataClaim points to the Metal3DataClaim the Metal3Data was created for.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              index:
                description: Index stores the index value of this instance in the Metal3DataTemplate.
                type: integer
              metaData:
                description: MetaData points to the rendered MetaData secret.
                properties:
                  name:
                    description: Name is unique within a namespace to reference a secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret name must be unique.
                    type: string
                type: object
              networkData:
                description: NetworkData points to the rendered NetworkData secret.
                properties:
                  name:
                    description: Name is unique within a namespace to reference a secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret name must be unique.
                    type: string
                type: object
              template:
                description: DataTemplate is the Metal3DataTemplate this was generated from.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              templateReference:
                description: TemplateReference refers to the Template the Metal3MachineTemplate refers to. It can be matched against the key or it may also point to the name of the template Metal3Data refers to
                type: string
            required:
            - claim
            - template
            type: object
          status:
            description: Metal3DataStatus defines the observed state of Metal3Data.
            properties:
              errorMessage:
                description: ErrorMessage contains the error message
                type: string
              ready:
                description: Ready is a flag set to True if the secrets were rendered properly
                type: boolean
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capm3-serving-cert
    controller-gen.kubebuilder.io/version: v0.5.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    cluster.x-k8s.io/v1alpha3: v1alpha3_v1alpha4
  name: metal3datatemplates.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capm3-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3DataTemplate
    listKind: Metal3DataTemplateList
    plural: metal3datatemplates
    shortNames:
    - m3dt
    - m3datatemplate
    - m3datatemplates
    - metal3dt
    - metal3datatemplate
    singular: metal3datatemplate
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster to which this template belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    name: v1alpha4
    schema:
      openAPIV3Schema:
        description: Metal3DataTemplate is the Schema for the metal3datatemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3DataTemplateSpec defines the desired state of Metal3DataTemplate.
            properties:
              clusterName:
                description: ClusterName is the name of the Cluster this object belongs to.
                minLength: 1
                type: string
              metaData:
                description: MetaData contains the information needed to generate the metadata secret
                properties:
                  dnsServersFromIPPool:
                    description: DNSServersFromPool is the list of metadata items to be rendered as dns servers.
                    items:
                      properties:
                        key:
                          description: Key will be used as the key to set in the metadata map for cloud-init
                          type: string
                        name:
                          description: Name is the name of the IPPool used to fetch the value to set in the metadata map for cloud-init
                          type: string
                      required:
                      - key
                      - name
                      type: object
                    type: array
                  fromAnnotations:
                    description: FromAnnotations is the list of metadata items to be fetched from object Annotations
                    items:
                      description: MetaDataFromAnnotation contains the information to fetch an annotation content, if the label does not exist, it is rendered as empty string
                      properties:
                        annotation:
                          description: Annotation is the key of the Annotation to fetch
                          type: string
                        key:
                          description: Key will be used as the key to set in the metadata map for cloud-init
                          type: string
                        object:
                          description: Object is the type of the object from which we retrieve the name
                          enum:
                          - machine
                          - metal3machine
                          - baremetalhost
                          type: string
                      required:
                      - annotation
                      - key
                      - object
                      type: object
                    type: array
                  fromHostInterfaces:
                    description: FromHostInterfaces is the list of metadata items to be rendered as MAC addresses of the host interfaces.
                    items:
                      description: MetaDataHostInterface contains the information to render the object name
                      properties:
                        interface:
                          description: Interface is the name of the interface in the BareMetalHost Status Hardware Details list of interfaces from which to fetch the MAC address.
                          type: string
                        key:
                          description: Key will be used as the key to set in the metadata map for cloud-init
                          type: string
                      required:
                      - interface
                      - key
                      type: object
                    type: array
                  fromLabels:
                    description: FromLabels is the list of metadata items to be fetched from object labels
                    items:
                      description: MetaDataFromLabel contains the information to fetch a label content, if the label does not exist, it is rendered as empty string
                      properties:
                        key:
                          description: Key will be used as the key to set in the metadata map for cloud-init
                          type: string
                        label:
                          description: Label is the key of the label to fetch
                          type: string
                        object:
                          description: Object is the type of the object from which we retrieve the name
                          enum:
                          - machine
                          - metal3machine
                          - baremetalhost
                          type: string
                      required:
                      - key
                      - label
                      - object
                      type: object
                    type: array
                  gatewaysFromIPPool:
                    description: GatewaysFromPool is the list of metadata items to be rendered as gateway addresses.
                    items:
                      properties:
                        key:
                          description: Key will be used as the key to set in the metadata map for cloud-init
                          type: string
                        name:
                          description: Name is the name of the IPPool used to fetch the value to set in the metadata map for cloud-init
                          type: string
                      required:
                      - key
                      - name
                      type: object
                    type: array
                  indexes:
                    description: Indexes is the list of metadata items to be rendered from the index of the Metal3Data
                    items:
                      description: MetaDataIndex contains the information to render the index
                      properties:
                        key:
                          description: Key will be used as the key to set in the metadata map for cloud-init
                          type: string
                        offset:
                          description: Offset is the offset to apply to the index when rendering it
                          type: integer
                        prefix:
                          description: Prefix is the prefix string
                          type: string
                        step:
                          default: 1
                          description: Step is the multiplier of the index
                          type: integer
                        suffix:
                          description: Suffix is the suffix string
                          type: string
                      required:
                      - key
                      type: object
                    type: array
                  ipAddressesFromIPPool:
                    description: IPAddressesFromPool is the list of metadata items to be rendered as ip addresses.
                    items:
                      properties:
                        key:
                          description: Key will be used as the key to set in the metadata map for cloud-init
                          type: string
                        name:
                          description: Name is the name of the IPPool used to fetch the value to set in the metadata map for cloud-init
                          type: string
                      required:
                      - key
                      - name
                      type: object
                    type: array
                  namespaces:
                    description: Namespaces is the list of metadata items to be rendered from the namespace
                    items:
                      description: MetaDataNamespace contains the information to render the namespace
                      properties:
                        key:
                          description: Key will be used as the key to set in the metadata map for cloud-init
                          type: string
                      required:
                      - key
                      type: object
                    type: array
                  objectNames:
                    description: ObjectNames is the list of metadata items to be rendered from the name of objects.
                    items:
                      description: MetaDataObjectName contains the information to render the object name
                      properties:
                        key:
                          description: Key will be used as the key to set in the metadata map for cloud-init
                          type: string
                        object:
                          description: Object is the type of the object from which we retrieve the name
                          enum:
                          - machine
                          - metal3machine
                          - baremetalhost
                          type: string
                      required:
                      - key
                      - object
                      type: object
                    type: array
                  prefixesFromIPPool:
                    description: PrefixesFromPool is the list of metadata items to be rendered as network prefixes.
                    items:
                      properties:
                        key:
                          description: Key will be used as the key to set in the metadata map for cloud-init
                          type: string
                        name:
                          description: Name is the name of the IPPool used to fetch the value to set in the metadata map for cloud-init
                          type: string
                      required:
                      - key
                      - name
                      type: object
                    type: array
                  strings:
                    description: Strings is the list of metadata items to be rendered from strings
                    items:
                      description: MetaDataString contains the information to render the string
                      properties:
                        key:
                          description: Key will be used as the key to set in the metadata map for cloud-init
                          type: string
                        value:
                          description: Value is the string to render.
                          type: string
                      required:
                      - key
                      - value
                      type: object
                    type: array
                type: object
              networkData:
                description: NetworkData contains the information needed to generate the networkdata secret
                properties:
                  links:
                    description: Links is a structure containing lists of different types objects
                    properties:
                      bonds:
                        description: Bonds contains a list of Bond links
                        items:
                          description: NetworkDataLinkBond represents a bond link object
                          properties:
                            bondLinks:
                              description: BondLinks is the list of links that are part of the bond.
                              items:
                                type: string
                              type: array
                            bondMode:
                              description: BondMode is the mode of bond used. It can be one of balance-rr, active-backup, balance-xor, broadcast, balance-tlb, balance-alb, 802.1ad
                              enum:
                              - balance-rr
                              - active-backup
                              - balance-xor
                              - broadcast
                              - balance-tlb
                              - balance-alb
                              - 802.1ad
                              type: string
                            id:
                              description: Id is the ID of the interface (used for naming)
                              type: string
                            macAddress:
                              description: MACAddress is the MAC address of the interface, containing the object used to render it.
                              properties:
                                fromHostInterface:
                                  description: FromHostInterface contains the name of the interface in the BareMetalHost Introspection details from which to fetch the MAC address
                                  type: string
                                string:
                                  description: String contains the MAC address given as a string
                                  type: string
                              type: object
                            mtu:
                              default: 1500
                              description: MTU is the MTU of the interface
                              maximum: 9000
                              type: integer
                          required:
                          - bondLinks
                          - bondMode
                          - id
                          - macAddress
                          type: object
                        type: array
                      ethernets:
                        description: Ethernets contains a list of Ethernet links
                        items:
                          description: NetworkDataLinkEthernet represents an ethernet link object
                          properties:
                            id:
                              description: Id is the ID of the interface (used for naming)
                              type: string
                            macAddress:
                              description: MACAddress is the MAC address of the interface, containing the object used to render it.
                              properties:
                                fromHostInterface:
                                  description: FromHostInterface contains the name of the interface in the BareMetalHost Introspection details from which to fetch the MAC address
                                  type: string
                                string:
                                  description: String contains the MAC address given as a string
                                  type: string
                              type: object
                            mtu:
                              default: 1500
                              description: MTU is the MTU of the interface
                              maximum: 9000
                              type: integer
                            type:
                              description: 'Type is the type of the ethernet link. It can be one of: bridge, dvs, hw_veb, hyperv, ovs, tap, vhostuser, vif, phy'
                              enum:
                              - bridge
                              - dvs
                              - hw_veb
                              - hyperv
                              - ovs
                              - tap
                              - vhostuser
                              - vif
                              - phy
                              type: string
                          required:
                          - id
                          - macAddress
                          - type
                          type: object
                        type: array
                      vlans:
                        description: Vlans contains a list of Vlan links
                        items:
                          description: NetworkDataLinkVlan represents a vlan link object
                          properties:
                            id:
                              description: Id is the ID of the interface (used for naming)
                              type: string
                            macAddress:
                              description: MACAddress is the MAC address of the interface, containing the object used to render it.
                              properties:
                                fromHostInterface:
                                  description: FromHostInterface contains the name of the interface in the BareMetalHost Introspection details from which to fetch the MAC address
                                  type: string
                                string:
                                  description: String contains the MAC address given as a string
                                  type: string
                              type: object
                            mtu:
                              default: 1500
                              description: MTU is the MTU of the interface
                              maximum: 9000
                              type: integer
                            vlanID:
                              description: VlanID is the Vlan ID
                              maximum: 4096
                              type: integer
                            vlanLink:
                              description: VlanLink is the name of the link on which the vlan should be added
                              type: string
                          required:
                          - id
                          - macAddress
                          - vlanID
                          - vlanLink
                          type: object
                        type: array
                    type: object
                  networks:
                    description: Networks  is a structure containing lists of different types objects
                    properties:
                      ipv4:
                        description: IPv4 contains a list of IPv4 static allocations
                        items:
                          description: NetworkDataIPv4 represents an ipv4 static network object
                          properties:
                            id:
                              description: ID is the network ID (name)
                              type: string
                            ipAddressFromIPPool:
                              description: IPAddressFromIPPool contains the name of the IPPool to use to get an ip address
                              type: string
                            link:
                              description: Link is the link on which the network applies
                              type: string
                            routes:
                              description: Routes contains a list of IPv4 routes
                              items:
                                description: NetworkDataRoutev4 represents an ipv4 route object
                                properties:
                                  gateway:
                                    description: Gateway is the IPv4 address of the gateway
                                    properties:
                                      fromIPPool:
                                        description: FromIPPool is the name of the IPPool to fetch the gateway from
                                        type: string
                                      string:
                                        description: String is the gateway given as a string
                                        pattern: ^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$
                                        type: string
                                    type: object
                                  network:
                                    description: Network is the IPv4 network address
                                    pattern: ^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$
                                    type: string
                                  prefix:
                                    description: Prefix is the mask of the network as integer (max 32)
                                    maximum: 32
                                    type: integer
                                  services:
                                    description: Services is a list of IPv4 services
                                    properties:
                                      dns:
                                        description: DNS is a list of IPv4 DNS services
                                        items:
                                          description: IPAddressv4 is used for validation of an IPv6 address
                                          pattern: ^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$
                                          type: string
                                        type: array
                                      dnsFromIPPool:
                                        description: DNSFromIPPool is the name of the IPPool from which to get the DNS servers
                                        type: string
                                    type: object
                                required:
                                - gateway
                                - network
                                type: object
                              type: array
                          required:
                          - id
                          - ipAddressFromIPPool
                          - link
                          type: object
                        type: array
                      ipv4DHCP:
                        description: IPv4 contains a list of IPv4 DHCP allocations
                        items:
                          description: NetworkDataIPv4DHCP represents an ipv4 DHCP network object
                          properties:
                            id:
                              description: ID is the network ID (name)
                              type: string
                            link:
                              description: Link is the link on which the network applies
                              type: string
                            routes:
                              description: Routes contains a list of IPv4 routes
                              items:
                                description: NetworkDataRoutev4 represents an ipv4 route object
                                properties:
                                  gateway:
                                    description: Gateway is the IPv4 address of the gateway
                                    properties:
                                      fromIPPool:
                                        description: FromIPPool is the name of the IPPool to fetch the gateway from
                                        type: string
                                      string:
                                        description: String is the gateway given as a string
                                        pattern: ^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$
                                        type: string
                                    type: object
                                  network:
                                    description: Network is the IPv4 network address
                                    pattern: ^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$
                                    type: string
                                  prefix:
                                    description: Prefix is the mask of the network as integer (max 32)
                                    maximum: 32
                                    type: integer
                                  services:
                                    description: Services is a list of IPv4 services
                                    properties:
                                      dns:
                                        description: DNS is a list of IPv4 DNS services
                                        items:
                                          description: IPAddressv4 is used for validation of an IPv6 address
                                          pattern: ^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$
                                          type: string
                                        type: array
                                      dnsFromIPPool:
                                        description: DNSFromIPPool is the name of the IPPool from which to get the DNS servers
                                        type: string
                                    type: object
                                required:
                                - gateway
                                - network
                                type: object
                              type: array
                          required:
                          - id
                          - link
                          type: object
                        type: array
                      ipv6:
                        description: IPv4 contains a list of IPv6 static allocations
                        items:
                          description: NetworkDataIPv6 represents an ipv6 static network object
                          properties:
                            id:
                              description: ID is the network ID (name)
                              type: string
                            ipAddressFromIPPool:
                              description: IPAddressFromIPPool contains the name of the IPPool to use to get an ip address
                              type: string
                            link:
                              description: Link is the link on which the network applies
                              type: string
                            routes:
                              description: Routes contains a list of IPv6 routes
                              items:
                                description: NetworkDataRoutev6 represents an ipv6 route object
                                properties:
                                  gateway:
                                    description: Gateway is the IPv6 address of the gateway
                                    properties:
                                      fromIPPool:
                                        description: FromIPPool is the name of the IPPool to fetch the gateway from
                                        type: string
                                      string:
                                        description: String is the gateway given as a string
                                        pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                        type: string
                                    type: object
                                  network:
                                    description: Network is the IPv6 network address
                                    pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                    type: string
                                  prefix:
                                    description: Prefix is the mask of the network as integer (max 128)
                                    maximum: 128
                                    type: integer
                                  services:
                                    description: Services is a list of IPv6 services
                                    properties:
                                      dns:
                                        description: DNS is a list of IPv6 DNS services
                                        items:
                                          description: IPAddressv6 is used for validation of an IPv6 address
                                          pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                          type: string
                                        type: array
                                      dnsFromIPPool:
                                        description: DNSFromIPPool is the name of the IPPool from which to get the DNS servers
                                        type: string
                                    type: object
                                required:
                                - gateway
                                - network
                                type: object
                              type: array
                          required:
                          - id
                          - ipAddressFromIPPool
                          - link
                          type: object
                        type: array
                      ipv6DHCP:
                        description: IPv4 contains a list of IPv6 DHCP allocations
                        items:
                          description: NetworkDataIPv6DHCP represents an ipv6 DHCP network object
                          properties:
                            id:
                              description: ID is the network ID (name)
                              type: string
                            link:
                              description: Link is the link on which the network applies
                              type: string
                            routes:
                              description: Routes contains a list of IPv6 routes
                              items:
                                description: NetworkDataRoutev6 represents an ipv6 route object
                                properties:
                                  gateway:
                                    description: Gateway is the IPv6 address of the gateway
                                    properties:
                                      fromIPPool:
                                        description: FromIPPool is the name of the IPPool to fetch the gateway from
                                        type: string
                                      string:
                                        description: String is the gateway given as a string
                                        pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                        type: string
                                    type: object
                                  network:
                                    description: Network is the IPv6 network address
                                    pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                    type: string
                                  prefix:
                                    description: Prefix is the mask of the network as integer (max 128)
                                    maximum: 128
                                    type: integer
                                  services:
                                    description: Services is a list of IPv6 services
                                    properties:
                                      dns:
                                        description: DNS is a list of IPv6 DNS services
                                        items:
                                          description: IPAddressv6 is used for validation of an IPv6 address
                                          pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                          type: string
                                        type: array
                                      dnsFromIPPool:
                                        description: DNSFromIPPool is the name of the IPPool from which to get the DNS servers
                                        type: string
                                    type: object
                                required:
                                - gateway
                                - network
                                type: object
                              type: array
                          required:
                          - id
                          - link
                          type: object
                        type: array
                      ipv6SLAAC:
                        description: IPv4 contains a list of IPv6 SLAAC allocations
                        items:
                          description: NetworkDataIPv6DHCP represents an ipv6 DHCP network object
                          properties:
                            id:
                              description: ID is the network ID (name)
                              type: string
                            link:
                              description: Link is the link on which the network applies
                              type: string
                            routes:
                              description: Routes contains a list of IPv6 routes
                              items:
                                description: NetworkDataRoutev6 represents an ipv6 route object
                                properties:
                                  gateway:
                                    description: Gateway is the IPv6 address of the gateway
                                    properties:
                                      fromIPPool:
                                        description: FromIPPool is the name of the IPPool to fetch the gateway from
                                        type: string
                                      string:
                                        description: String is the gateway given as a string
                                        pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                        type: string
                                    type: object
                                  network:
                                    description: Network is the IPv6 network address
                                    pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                    type: string
                                  prefix:
                                    description: Prefix is the mask of the network as integer (max 128)
                                    maximum: 128
                                    type: integer
                                  services:
                                    description: Services is a list of IPv6 services
                                    properties:
                                      dns:
                                        description: DNS is a list of IPv6 DNS services
                                        items:
                                          description: IPAddressv6 is used for validation of an IPv6 address
                                          pattern: ^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$
                                          type: string
                                        type: array
                                      dnsFromIPPool:
                                        description: DNSFromIPPool is the name of the IPPool from which to get the DNS servers
                                        type: string
                                    type: object
                                required:
                                - gateway
                                - network
                                type: object
                              type: array
                          required:
                          - id
                          - link
                          type: object
                        type: array
                    type: object
                  services:
                    description: Services  is a structure containing lists of different types objects
                    properties:
                      dns:
                        description: DNS is a list of DNS services
                        items:
                          description: IPAddress is used for validation of an IP address
                          pattern: ((^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$)|(^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:))$))
                          type: string
                        type: array
                      dnsFromIPPool:
                        description: DNSFromIPPool is the name of the IPPool from which to get the DNS servers
                        type: string
                    type: object
                type: object
              templateReference:
                description: TemplateReference refers to the Template the Metal3MachineTemplate refers to. It can be matched against the key or it may also point to the name of the template Metal3Data refers to
                type: string
            required:
            - clusterName
            type: object
          status:
            description: Metal3DataTemplateStatus defines the observed state of Metal3DataTemplate.
            properties:
              indexes:
                additionalProperties:
                  type: integer
                description: Indexes contains the map of Metal3Machine and index used
                type: object
              lastUpdated:
                description: LastUpdated identifies when this status was last observed.
                format: date-time
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capm3-serving-cert
    controller-gen.kubebuilder.io/version: v0.5.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    cluster.x-k8s.io/v1alpha3: v1alpha3_v1alpha4
  name: metal3machines.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capm3-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3Machine
    listKind: Metal3MachineList
    plural: metal3machines
    shortNames:
    - m3m
    - m3machine
    - m3machines
    - metal3m
    - metal3machine
    singular: metal3machine
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Provider ID
      jsonPath: .spec.providerID
      name: ProviderID
      type: string
    - description: metal3machine is Ready
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Cluster to which this M3Machine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: metal3machine current phase
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: Metal3Machine is the Schema for the metal3machines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3MachineSpec defines the desired state of Metal3Machine
            properties:
              hostSelector:
                description: HostSelector specifies matching criteria for labels on BareMetalHosts. This is used to limit the set of BareMetalHost objects considered for claiming for a metal3machine.
                properties:
                  matchExpressions:
                    description: Label match expressions that must be true on a chosen BareMetalHost
                    items:
                      properties:
                        key:
                          type: string
                        operator:
                          description: Operator represents a key/field's relationship to value(s). See labels.Requirement and fields.Requirement for more details.
                          type: string
                        values:
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      - values
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: Key/value pairs of labels that must exist on a chosen BareMetalHost
                    type: object
                type: object
              image:
                description: Image is the image to be provisioned.
                properties:
                  checksum:
                    description: Checksum is a md5sum value or a URL to retrieve one.
                    type: string
                  checksumType:
                    description: ChecksumType is the checksum algorithm for the image. e.g md5, sha256, sha512
                    enum:
                    - md5
                    - sha256
                    - sha512
                    type: string
                  format:
                    description: DiskFormat contains the image disk format
                    enum:
                    - raw
                    - qcow2
                    - vdi
                    - vmdk
                    type: string
                  url:
                    description: URL is a location of an image to deploy.
                    type: string
                required:
                - checksum
                - url
                type: object
              providerID:
                description: ProviderID will be the Metal3 machine in ProviderID format (metal3://<bmh-uuid>)
                type: string
              userData:
                description: UserData references the Secret that holds user data needed by the bare metal operator. The Namespace is optional; it will default to the metal3machine's namespace if not specified.
                properties:
                  name:
                    description: Name is unique within a namespace to reference a secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret name must be unique.
                    type: string
                type: object
            required:
            - image
            type: object
          status:
            description: Metal3MachineStatus defines the observed state of Metal3Machine
            properties:
              addresses:
                description: Addresses is a list of addresses assigned to the machine. This field is copied from the infrastructure provider reference.
                items:
                  description: MachineAddress contains information for the node's address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is a terminal problem reconciling the metal3machine and will contain a more verbose string suitable for logging and human consumption. \n This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the metal3machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. \n Any transient errors that occur during the reconciliation of metal3machines can be added as events to the metal3machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is a terminal problem reconciling the metal3machine and will contain a succinct value suitable for machine interpretation. \n This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the metal3machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. \n Any transient errors that occur during the reconciliation of metal3machines can be added as events to the metal3machine object and/or logged in the controller's output."
                type: string
              lastUpdated:
                description: LastUpdated identifies when this status was last observed.
                format: date-time
                type: string
              phase:
                description: Phase represents the current phase of machine actuation. E.g. Pending, Running, Terminating, Failed etc.
                type: string
              ready:
                description: 'Ready is the state of the metal3. TODO : Document the variable : mhrivnak: " it would be good to document what this means, how to interpret it, under what circumstances the value changes, etc."'
                type: boolean
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Provider ID
      jsonPath: .spec.providerID
      name: ProviderID
      type: string
    - description: metal3machine is Ready
      jsonPath: .status.ready
      name: Ready
      type: string
    - description: Cluster to which this M3Machine belongs
      jsonPath: .metadata.labels.cluster\.x-k8s\.io/cluster-name
      name: Cluster
      type: string
    - description: metal3machine current phase
      jsonPath: .status.phase
      name: Phase
      type: string
    name: v1alpha4
    schema:
      openAPIV3Schema:
        description: Metal3Machine is the Schema for the metal3machines API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3MachineSpec defines the desired state of Metal3Machine
            properties:
              dataTemplate:
                description: MetadataTemplate is a reference to a Metal3DataTemplate object containing a template of metadata to be rendered. Metadata keys defined in the metadataTemplate take precedence over keys defined in metadata field.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              hostSelector:
                description: HostSelector specifies matching criteria for labels on BareMetalHosts. This is used to limit the set of BareMetalHost objects considered for claiming for a metal3machine.
                properties:
                  matchExpressions:
                    description: Label match expressions that must be true on a chosen BareMetalHost
                    items:
                      properties:
                        key:
                          type: string
                        operator:
                          description: Operator represents a key/field's relationship to value(s). See labels.Requirement and fields.Requirement for more details.
                          type: string
                        values:
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      - values
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: Key/value pairs of labels that must exist on a chosen BareMetalHost
                    type: object
                type: object
              image:
                description: Image is the image to be provisioned.
                properties:
                  checksum:
                    description: Checksum is a md5sum value or a URL to retrieve one. Not required for live-iso.
                    type: string
                  checksumType:
                    description: ChecksumType is the checksum algorithm for the image. e.g md5, sha256, sha512
                    enum:
                    - md5
                    - sha256
                    - sha512
                    type: string
                  format:
                    description: DiskFormat contains the image disk format.
                    enum:
                    - raw
                    - qcow2
                    - vdi
                    - vmdk
                    - live-iso
                    type: string
                  url:
                    description: URL is a location of an image to deploy.
                    type: string
                required:
                - url
                type: object
              metaData:
                description: MetaData is an object storing the reference to the secret containing the Metadata given by the user.
                properties:
                  name:
                    description: Name is unique within a namespace to reference a secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret name must be unique.
                    type: string
                type: object
              networkData:
                description: NetworkData is an object storing the reference to the secret containing the network data given by the user.
                properties:
                  name:
                    description: Name is unique within a namespace to reference a secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret name must be unique.
                    type: string
                type: object
              providerID:
                description: ProviderID will be the Metal3 machine in ProviderID format (metal3://<bmh-uuid>)
                type: string
              userData:
                description: UserData references the Secret that holds user data needed by the bare metal operator. The Namespace is optional; it will default to the metal3machine's namespace if not specified.
                properties:
                  name:
                    description: Name is unique within a namespace to reference a secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret name must be unique.
                    type: string
                type: object
            required:
            - image
            type: object
          status:
            description: Metal3MachineStatus defines the observed state of Metal3Machine
            properties:
              addresses:
                description: Addresses is a list of addresses assigned to the machine. This field is copied from the infrastructure provider reference.
                items:
                  description: MachineAddress contains information for the node's address.
                  properties:
                    address:
                      description: The machine address.
                      type: string
                    type:
                      description: Machine address type, one of Hostname, ExternalIP or InternalIP.
                      type: string
                  required:
                  - address
                  - type
                  type: object
                type: array
              failureMessage:
                description: "FailureMessage will be set in the event that there is a terminal problem reconciling the metal3machine and will contain a more verbose string suitable for logging and human consumption. \n This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the metal3machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. \n Any transient errors that occur during the reconciliation of metal3machines can be added as events to the metal3machine object and/or logged in the controller's output."
                type: string
              failureReason:
                description: "FailureReason will be set in the event that there is a terminal problem reconciling the metal3machine and will contain a succinct value suitable for machine interpretation. \n This field should not be set for transitive errors that a controller faces that are expected to be fixed automatically over time (like service outages), but instead indicate that something is fundamentally wrong with the metal3machine's spec or the configuration of the controller, and that manual intervention is required. Examples of terminal errors would be invalid combinations of settings in the spec, values that are unsupported by the controller, or the responsible controller itself being critically misconfigured. \n Any transient errors that occur during the reconciliation of metal3machines can be added as events to the metal3machine object and/or logged in the controller's output."
                type: string
              lastUpdated:
                description: LastUpdated identifies when this status was last observed.
                format: date-time
                type: string
              metaData:
                description: MetaData is an object storing the reference to the secret containing the Metadata used to deploy the BareMetalHost.
                properties:
                  name:
                    description: Name is unique within a namespace to reference a secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret name must be unique.
                    type: string
                type: object
              networkData:
                description: NetworkData is an object storing the reference to the secret containing the network data used to deploy the BareMetalHost.
                properties:
                  name:
                    description: Name is unique within a namespace to reference a secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret name must be unique.
                    type: string
                type: object
              phase:
                description: Phase represents the current phase of machine actuation. E.g. Pending, Running, Terminating, Failed etc.
                type: string
              ready:
                description: 'Ready is the state of the metal3. TODO : Document the variable : mhrivnak: " it would be good to document what this means, how to interpret it, under what circumstances the value changes, etc."'
                type: boolean
              renderedData:
                description: RenderedData is a reference to a rendered Metal3Data object containing the references to metaData and networkData secrets.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                    type: string
                  kind:
                    description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                    type: string
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                    type: string
                  namespace:
                    description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                    type: string
                  resourceVersion:
                    description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                    type: string
                  uid:
                    description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                    type: string
                type: object
              userData:
                description: UserData references the Secret that holds user data needed by the bare metal operator. The Namespace is optional; it will default to the metal3machine's namespace if not specified.
                properties:
                  name:
                    description: Name is unique within a namespace to reference a secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret name must be unique.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capm3-serving-cert
    controller-gen.kubebuilder.io/version: v0.5.0
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    cluster.x-k8s.io/v1alpha3: v1alpha3_v1alpha4
  name: metal3machinetemplates.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: Cg==
        service:
          name: capm3-webhook-service
          namespace: capi-webhook-system
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Metal3MachineTemplate
    listKind: Metal3MachineTemplateList
    plural: metal3machinetemplates
    shortNames:
    - m3mt
    - m3machinetemplate
    - m3machinetemplates
    - metal3mt
    - metal3machinetemplate
    singular: metal3machinetemplate
  scope: Namespaced
  versions:
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: Metal3MachineTemplate is the Schema for the metal3machinetemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3MachineTemplateSpec defines the desired state of Metal3MachineTemplate
            properties:
              template:
                description: Metal3MachineTemplateResource describes the data needed to create a Metal3Machine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior of the machine.
                    properties:
                      hostSelector:
                        description: HostSelector specifies matching criteria for labels on BareMetalHosts. This is used to limit the set of BareMetalHost objects considered for claiming for a metal3machine.
                        properties:
                          matchExpressions:
                            description: Label match expressions that must be true on a chosen BareMetalHost
                            items:
                              properties:
                                key:
                                  type: string
                                operator:
                                  description: Operator represents a key/field's relationship to value(s). See labels.Requirement and fields.Requirement for more details.
                                  type: string
                                values:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              - values
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: Key/value pairs of labels that must exist on a chosen BareMetalHost
                            type: object
                        type: object
                      image:
                        description: Image is the image to be provisioned.
                        properties:
                          checksum:
                            description: Checksum is a md5sum value or a URL to retrieve one.
                            type: string
                          checksumType:
                            description: ChecksumType is the checksum algorithm for the image. e.g md5, sha256, sha512
                            enum:
                            - md5
                            - sha256
                            - sha512
                            type: string
                          format:
                            description: DiskFormat contains the image disk format
                            enum:
                            - raw
                            - qcow2
                            - vdi
                            - vmdk
                            type: string
                          url:
                            description: URL is a location of an image to deploy.
                            type: string
                        required:
                        - checksum
                        - url
                        type: object
                      providerID:
                        description: ProviderID will be the Metal3 machine in ProviderID format (metal3://<bmh-uuid>)
                        type: string
                      userData:
                        description: UserData references the Secret that holds user data needed by the bare metal operator. The Namespace is optional; it will default to the metal3machine's namespace if not specified.
                        properties:
                          name:
                            description: Name is unique within a namespace to reference a secret resource.
                            type: string
                          namespace:
                            description: Namespace defines the space within which the secret name must be unique.
                            type: string
                        type: object
                    required:
                    - image
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: Metal3MachineTemplate is the Schema for the metal3machinetemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Metal3MachineTemplateSpec defines the desired state of Metal3MachineTemplate
            properties:
              nodeReuse:
                default: false
                description: When set to True, CAPM3 Machine controller will pick the same pool of BMHs' that were released during the upgrade operation.
                type: boolean
              template:
                description: Metal3MachineTemplateResource describes the data needed to create a Metal3Machine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior of the machine.
                    properties:
                      dataTemplate:
                        description: MetadataTemplate is a reference to a Metal3DataTemplate object containing a template of metadata to be rendered. Metadata keys defined in the metadataTemplate take precedence over keys defined in metadata field.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                            type: string
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                          namespace:
                            description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                            type: string
                          resourceVersion:
                            description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                            type: string
                        type: object
                      hostSelector:
                        description: HostSelector specifies matching criteria for labels on BareMetalHosts. This is used to limit the set of BareMetalHost objects considered for claiming for a metal3machine.
                        properties:
                          matchExpressions:
                            description: Label match expressions that must be true on a chosen BareMetalHost
                            items:
                              properties:
                                key:
                                  type: string
                                operator:
                                  description: Operator represents a key/field's relationship to value(s). See labels.Requirement and fields.Requirement for more details.
                                  type: string
                                values:
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              - values
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: Key/value pairs of labels that must exist on a chosen BareMetalHost
                            type: object
                        type: object
                      image:
                        description: Image is the image to be provisioned.
                        properties:
                          checksum:
                            description: Checksum is a md5sum value or a URL to retrieve one. Not required for live-iso.
                            type: string
                          checksumType:
                            description: ChecksumType is the checksum algorithm for the image. e.g md5, sha256, sha512
                            enum:
                            - md5
                            - sha256
                            - sha512
                            type: string
                          format:
                            description: DiskFormat contains the image disk format.
                            enum:
                            - raw
                            - qcow2
                            - vdi
                            - vmdk
                            - live-iso
                            type: string
                          url:
                            description: URL is a location of an image to deploy.
                            type: string
                        required:
                        - url
                        type: object
                      metaData:
                        description: MetaData is an object storing the reference to the secret containing the Metadata given by the user.
                        properties:
                          name:
                            description: Name is unique within a namespace to reference a secret resource.
                            type: string
                          namespace:
                            description: Namespace defines the space within which the secret name must be unique.
                            type: string
                        type: object
                      networkData:
                        description: NetworkData is an object storing the reference to the secret containing the network data given by the user.
                        properties:
                          name:
                            description: Name is unique within a namespace to reference a secret resource.
                            type: string
                          namespace:
                            description: Namespace defines the space within which the secret name must be unique.
                            type: string
                        type: object
                      providerID:
                        description: ProviderID will be the Metal3 machine in ProviderID format (metal3://<bmh-uuid>)
                        type: string
                      userData:
                        description: UserData references the Secret that holds user data needed by the bare metal operator. The Namespace is optional; it will default to the metal3machine's namespace if not specified.
                        properties:
                          name:
                            description: Name is unique within a namespace to reference a secret resource.
                            type: string
                          namespace:
                            description: Namespace defines the space within which the secret name must be unique.
                            type: string
                        type: object
                    required:
                    - image
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-baremetal-operator-leader-election-role
  namespace: capm3-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-ipam-leader-election-role
  namespace: capm3-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-leader-election-role
  namespace: capm3-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-baremetal-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - metal3.io
  resources:
  - baremetalhosts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - metal3.io
  resources:
  - baremetalhosts/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-baremetal-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-ipam-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
- apiGroups:
  - ipam.metal3.io
  resources:
  - ipaddresses
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ipam.metal3.io
  resources:
  - ipaddresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ipam.metal3.io
  resources:
  - ipclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ipam.metal3.io
  resources:
  - ipclaims/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ipam.metal3.io
  resources:
  - ippools
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ipam.metal3.io
  resources:
  - ippools/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-ipam-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters/status
  verbs:
  - get
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - kubeadmcontrolplanes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinedeployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machinesets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3clusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3clusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3dataclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3dataclaims/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3datas
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3datas/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3datatemplates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3datatemplates/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3ipaddresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3ipaddresses/status
  verbs:
  - get
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3ipclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3ipclaims/status
  verbs:
  - get
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3machines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3machines/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - metal3machinetemplates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - metal3.io
  resources:
  - baremetalhosts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - metal3.io
  resources:
  - baremetalhosts/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-baremetal-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-baremetal-operator-leader-election-rolebinding
  namespace: capm3-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capm3-baremetal-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capm3-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-ipam-leader-election-rolebinding
  namespace: capm3-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capm3-ipam-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capm3-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-leader-election-rolebinding
  namespace: capm3-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capm3-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capm3-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-baremetal-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capm3-baremetal-operator-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capm3-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-baremetal-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capm3-baremetal-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capm3-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-ipam-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capm3-ipam-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capm3-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-ipam-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capm3-ipam-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capm3-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capm3-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capm3-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capm3-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capm3-system
---
apiVersion: v1
data:
  CACHEURL: http://172.22.0.1/images
  DEPLOY_KERNEL_URL: ${DEPLOY_KERNEL_URL}
  DEPLOY_RAMDISK_URL: ${DEPLOY_RAMDISK_URL}
  DHCP_RANGE: 172.22.0.10,172.22.0.100
  HTTP_PORT: "6180"
  IRONIC_CACERT_FILE: /opt/metal3/certs/ca/tls.crt
  IRONIC_ENDPOINT: ${IRONIC_URL}
  IRONIC_FAST_TRACK: "true"
  IRONIC_INSPECTOR_ENDPOINT: ${IRONIC_INSPECTOR_URL}
  PROVISIONING_INTERFACE: eth2
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-baremetal-operator-ironic
  namespace: capm3-system
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-ironic-credentials
  namespace: capm3-system
stringData:
  password: ${IRONIC_PASSWORD:-""}
  username: ${IRONIC_USERNAME:-""}
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-ironic-inspector-credentials
  namespace: capm3-system
stringData:
  password: ${IRONIC_INSPECTOR_PASSWORD:-""}
  username: ${IRONIC_INSPECTOR_USERNAME:-""}
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-ipam-webhook-service
  namespace: capi-webhook-system
spec:
  ports:
  - port: 443
    targetPort: ipam-webhook
  selector:
    cluster.x-k8s.io/provider: infrastructure-metal3
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-webhook-service
  namespace: capi-webhook-system
spec:
  ports:
  - port: 443
    targetPort: webhook-server
  selector:
    cluster.x-k8s.io/provider: infrastructure-metal3
---
apiVersion: v1
kind: Service
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    control-plane: controller-manager
  name: capm3-baremetal-operator-controller-manager-metrics-service
  namespace: capm3-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    cluster.x-k8s.io/provider: infrastructure-metal3
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    control-plane: controller-manager
  name: capm3-controller-metrics-service
  namespace: capm3-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    cluster.x-k8s.io/provider: infrastructure-metal3
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    control-plane: controller-manager
  name: capm3-ipam-controller-metrics-service
  namespace: capm3-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    cluster.x-k8s.io/provider: infrastructure-metal3
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: capm3-controller-manager
  namespace: capi-webhook-system
spec:
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-metal3
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-metal3
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --webhook-port=9443
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/metal3-io/cluster-api-provider-metal3:master
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: capm3-webhook-service-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: capm3-ipam-controller-manager
  namespace: capi-webhook-system
spec:
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-metal3
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-metal3
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --webhook-port=9443
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/metal3-io/ip-address-manager:v0.0.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: ipam-webhook
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: ipam-webhook-service-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    control-plane: controller-manager
  name: capm3-baremetal-operator-controller-manager
  namespace: capm3-system
spec:
  replicas: 1
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-metal3
      control-plane: controller-manager
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-metal3
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8085
        - --enable-leader-election
        command:
        - /baremetal-operator
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        envFrom:
        - configMapRef:
            name: capm3-baremetal-operator-ironic
        image: quay.io/metal3-io/baremetal-operator:master
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9440
          initialDelaySeconds: 3
          periodSeconds: 3
        name: manager
        volumeMounts:
        - mountPath: /opt/metal3/${IRONIC_NO_CA_CERT:-certs}/ca/
          name: cacert
          readOnly: true
        - mountPath: /opt/metal3/${IRONIC_NO_BASIC_AUTH:-auth}/ironic
          name: ironic-credentials
          readOnly: true
        - mountPath: /opt/metal3/${IRONIC_INSPECTOR_NO_BASIC_AUTH:-auth}/ironic-inspector
          name: ironic-inspector-credentials
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8085/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cacert
        secret:
          secretName: ironic-cacert
      - name: ironic-credentials
        secret:
          secretName: capm3-ironic-credentials
      - name: ironic-inspector-credentials
        secret:
          secretName: capm3-ironic-inspector-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: capm3-controller-manager
  namespace: capm3-system
spec:
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-metal3
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-metal3
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/metal3-io/cluster-api-provider-metal3:master
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  name: capm3-ipam-controller-manager
  namespace: capm3-system
spec:
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-metal3
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-metal3
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/metal3-io/ip-address-manager:v0.0.5
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9440
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-ipam-serving-cert
  namespace: capi-webhook-system
spec:
  dnsNames:
  - ipam-webhook-service.capi-webhook-system.svc
  - ipam-webhook-service.capi-webhook-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: capm3-ipam-selfsigned-issuer
  secretName: ipam-webhook-service-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-serving-cert
  namespace: capi-webhook-system
spec:
  dnsNames:
  - capm3-webhook-service.capi-webhook-system.svc
  - capm3-webhook-service.capi-webhook-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: capm3-selfsigned-issuer
  secretName: capm3-webhook-service-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-ipam-selfsigned-issuer
  namespace: capi-webhook-system
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-selfsigned-issuer
  namespace: capi-webhook-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capm3-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capm3-webhook-service
      namespace: capi-webhook-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha4-metal3cluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.metal3cluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - metal3clusters
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capm3-webhook-service
      namespace: capi-webhook-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha4-metal3data
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.metal3data.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - metal3datas
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capm3-webhook-service
      namespace: capi-webhook-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha4-metal3dataclaim
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.metal3dataclaim.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - metal3dataclaims
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capm3-webhook-service
      namespace: capi-webhook-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha4-metal3datatemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.metal3datatemplate.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - metal3datatemplates
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capm3-webhook-service
      namespace: capi-webhook-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha4-metal3machine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.metal3machine.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - metal3machines
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capm3-webhook-service
      namespace: capi-webhook-system
      path: /mutate-infrastructure-cluster-x-k8s-io-v1alpha4-metal3machinetemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.metal3machinetemplate.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - metal3machinetemplates
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/ipam-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-ipam-mutating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: capm3-ipam-webhook-service
      namespace: capi-webhook-system
      path: /mutate-ipam-metal3-io-v1alpha4-ipaddress
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.ipaddress.ipam.metal3.io
  rules:
  - apiGroups:
    - ipam.metal3.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - ipaddresses
- clientConfig:
    caBundle: Cg==
    service:
      name: capm3-ipam-webhook-service
      namespace: capi-webhook-system
      path: /mutate-ipam-metal3-io-v1alpha4-ipclaim
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.ipclaim.ipam.metal3.io
  rules:
  - apiGroups:
    - ipam.metal3.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - ipclaims
- clientConfig:
    caBundle: Cg==
    service:
      name: capm3-ipam-webhook-service
      namespace: capi-webhook-system
      path: /mutate-ipam-metal3-io-v1alpha4-ippool
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: default.ippool.ipam.metal3.io
  rules:
  - apiGroups:
    - ipam.metal3.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - ippools
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/capm3-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capm3-webhook-service
      namespace: capi-webhook-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha4-metal3cluster
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.metal3cluster.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - metal3clusters
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capm3-webhook-service
      namespace: capi-webhook-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha4-metal3data
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.metal3data.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - metal3datas
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capm3-webhook-service
      namespace: capi-webhook-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha4-metal3dataclaim
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.metal3dataclaim.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - metal3dataclaims
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capm3-webhook-service
      namespace: capi-webhook-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha4-metal3datatemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.metal3datatemplate.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - metal3datatemplates
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capm3-webhook-service
      namespace: capi-webhook-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha4-metal3machine
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.metal3machine.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - metal3machines
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: capm3-webhook-service
      namespace: capi-webhook-system
      path: /validate-infrastructure-cluster-x-k8s-io-v1alpha4-metal3machinetemplate
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.metal3machinetemplate.infrastructure.cluster.x-k8s.io
  rules:
  - apiGroups:
    - infrastructure.cluster.x-k8s.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - metal3machinetemplates
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: capi-webhook-system/ipam-serving-cert
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
  name: capm3-ipam-validating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: capm3-ipam-webhook-service
      namespace: capi-webhook-system
      path: /validate-ipam-metal3-io-v1alpha4-ipaddress
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.ipaddress.ipam.metal3.io
  rules:
  - apiGroups:
    - ipam.metal3.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - ipaddresses
- clientConfig:
    caBundle: Cg==
    service:
      name: capm3-ipam-webhook-service
      namespace: capi-webhook-system
      path: /validate-ipam-metal3-io-v1alpha4-ipclaim
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.ipclaim.ipam.metal3.io
  rules:
  - apiGroups:
    - ipam.metal3.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - ipclaims
- clientConfig:
    caBundle: Cg==
    service:
      name: capm3-ipam-webhook-service
      namespace: capi-webhook-system
      path: /validate-ipam-metal3-io-v1alpha4-ippool
  failurePolicy: Fail
  matchPolicy: Equivalent
  name: validation.ippool.ipam.metal3.io
  rules:
  - apiGroups:
    - ipam.metal3.io
    apiVersions:
    - v1alpha4
    operations:
    - CREATE
    - UPDATE
    resources:
    - ippools
